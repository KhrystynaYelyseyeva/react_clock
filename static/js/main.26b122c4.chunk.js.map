{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","tick","setState","console","log","toLocaleTimeString","hidden","props","Component","App","currentName","prevName","max","hiddenHandler","prevState","changeNameHandler","Math","floor","random","prevProps","snapshot","className","ButtonGroup","disableElevation","variant","Button","color","onClick","ReactDOM","render","document","getElementById"],"mappings":"+PAuCeA,E,4MAnCbC,MAAQ,CACNC,KAAM,IAAIC,M,kEAGS,IAAD,OAClBC,KAAKC,MAAQC,aACX,kBAAM,EAAKC,SACX,O,6BAKFH,KAAKI,SAAS,CACZN,KAAM,IAAIC,OAGZM,QAAQC,IAAIN,KAAKH,MAAMC,KAAKS,wB,+BAGpB,IACAC,EAAWR,KAAKS,MAAhBD,OAER,OACE,uBAAGA,OAAQA,GAAX,gBAEGR,KAAKH,MAAMC,KAAKS,0B,GA1BLG,aCmELC,G,kNA/Dbd,MAAQ,CACNW,QAAQ,EACRI,YAAa,EACbC,SAAU,EACVC,IAAK,K,EAWPC,cAAgB,kBACd,EAAKX,UAAS,SAAAY,GAAS,MAAK,CAC1BR,QAASQ,EAAUR,Y,EAIvBS,kBAAoB,kBAClB,EAAKb,UAAS,SAAAY,GAAS,MAAK,CAC1BH,SAAUG,EAAUJ,YACpBA,YAAaM,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMH,EAAUF,W,iEAjB9CO,EAAWL,EAAWM,GACnCN,EAAUH,WAAab,KAAKH,MAAMgB,UACjCG,EAAUJ,cAAgBZ,KAAKH,MAAMe,aAExCP,QAAQC,IAAR,qCAA0CN,KAAKH,MAAMgB,SAArD,eAAoEb,KAAKH,MAAMe,gB,+BAiBzE,IAAD,EACyBZ,KAAKH,MAA7BW,EADD,EACCA,OAAQI,EADT,EACSA,YAEhB,OACE,yBAAKW,UAAU,OACb,2CACA,2CACWX,IAEX,kBAAC,EAAD,CACEJ,OAAQA,IAEV,kBAACgB,EAAA,EAAD,CAAaC,kBAAgB,EAACC,QAAQ,aACpC,kBAACC,EAAA,EAAD,CACEC,MAAOpB,EACH,UACA,YACJqB,QAAS7B,KAAKe,eAEbP,EACG,aACA,gBAEN,kBAACmB,EAAA,EAAD,CACEC,MAAM,GACNC,QAAS7B,KAAKiB,mBAFhB,qB,GApDQP,cCFlBoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.26b122c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropsTypes from 'prop-types';\n\nclass Clock extends Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    const { hidden } = this.props;\n\n    return (\n      <p hidden={hidden}>\n        Current time:\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  hidden: PropsTypes.bool.isRequired,\n};\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Clock from './components/Clock/Clock';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    hidden: false,\n    currentName: 0,\n    prevName: 0,\n    max: 1000,\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.prevName !== this.state.prevName\n      || prevState.currentName !== this.state.currentName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${this.state.prevName} to ${this.state.currentName}`);\n    }\n  }\n\n  hiddenHandler = () => (\n    this.setState(prevState => ({\n      hidden: !prevState.hidden,\n    }))\n  );\n\n  changeNameHandler = () => (\n    this.setState(prevState => ({\n      prevName: prevState.currentName,\n      currentName: Math.floor(Math.random() * Math.floor(prevState.max)),\n    }))\n  );\n\n  render() {\n    const { hidden, currentName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <h3>\n          {`Name ${currentName}`}\n        </h3>\n        <Clock\n          hidden={hidden}\n        />\n        <ButtonGroup disableElevation variant=\"contained\">\n          <Button\n            color={hidden\n              ? 'primary'\n              : 'secondary'}\n            onClick={this.hiddenHandler}\n          >\n            {hidden\n              ? 'Show clock'\n              : 'Hidden clock'}\n          </Button>\n          <Button\n            color=\"\"\n            onClick={this.changeNameHandler}\n          >\n            Change name\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}